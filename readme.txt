Здравствуйте!

Здесь задание ДЗ3, текст задания ниже. 
Сделано всё, на чистом Redux, без Toolkit'а. Учиться - так учиться))
Все, что связано с файлами Redux (action creators, reducers и пр), находится в папке ReduxClear.
При авторизации обратите внимание, что так как сайт такой секретный (ну сказано же, что товары показывают только после регистрации-авторизации :) ), то пароль не меньше 5 символов. Если у Вас меньше, то в коде снимите ограничение в компоненте "Authorization.jsx". 
Буду благодарна за комментарии.
Приятной проверки!

P.S. КОММЕНТАРИИ В КОДЕ. В коде оставлены комментарии, в том числе относительно каких-то тонкостей кода, функций и пр. Я их оставляла для своего понимания материала. Понятно, что в конечном продукте их не должно быть, и в финальном дз уберу, но пока в промежуточных хотелось бы их оставить. Ну не делать же копию и не стирать их все перед каждым пушем, правда?..


ТЕКСТ ЗАДАНИЯ: 

1) Сохранение токена авторизации в redux 
Authorization.jsx, Registration.jsx. 

2) Реализовать страницу "Корзина" (redux)
    2.1) Добавление товара в корзину (на текущий момент) происходит путем клика на иконку с корзиной в карточке товара на странице списка
    2.2) Необходимо отображать количество товаров в корзине рядом с иконкой в шапке сайта. Эта цифра отвечает за уникальные товары в корзине.
    2.3) При переходе на страницу корзины, нужно отправить запрос на бэк (через TanStack Query) на получение всех товаров, которые пользователь добавил в корзину (см. файл pseudoCode.js, почитайте про Promise.all, Promise.allSettled)
    2.4) В корзине отображаем каждый товар на своей строчке (название товара, фото товара, количество, цена). За образец взяли реализацию корзины в сетевом магазине DNS. См скрин в прикрепленных ссылках.
    2.5) Реализовать функционал изменения количества конкретного товара. Минимум 1 шт, максимум берем из поля "stock" у товара. При достижении границ, кнопки убавления/прибавления должны стать неактивными.
    2.6) Реализовать возможность удалить выбранный товар из корзины
    2.7) Реализовать возможность выбора товаров в корзине, которые пользователь будет оформлять. Логика такая, что в корзине могут находится десятки товаров, но пользователь может выбрать, например, только 2 товара, которые хочет оформить. Считаем их стоимость (с учетом скидок) и выводим кнопку-пустышку "Оформить".  Опять же, зайдите на DNS и посмотрите как это реализовано у них. Возьмите за референс их подход.
    2.8) Реализовать информационную заглушку на детальной корзины, если в корзине нет товаров. Что-то типа: "Корзина пуста" + ссылки на страницы Детальная, Продукты, Профиль

3) Реализовать поиск товаров на главной странице с оптимизацией через debounce
SearchBar -> SearchBar.jsx,
customHooks -> useDebounce.js

4) Настроить синхронизацию redux с LocalStorage
запись: store.js 
чтение: initialState.js


P.S. КОММЕНТАРИИ В КОДЕ. В коде оставлены комментарии, в том числе относительно каких-то тонкостей кода, функций и пр. Я их оставляла для своего понимания материала. Понятно, что в конечном продукте их не должно быть, и в финальном дз уберу, но пока в промежуточных хотелось бы их оставить. Ну не делать же копию и не стирать их все перед каждым пушем, правда?..


 

